<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BaseUser">

    <select id="pager" parameterType="map" resultType="map">
        select bu.* , br.NAME AS ROLENAME from base_user bu
        left join base_role br on bu.BASE_ROLE_ID = br.ID
        where bu.PROJECT_CODE = #{PROJECT_CODE}
        <if test="USERNAME!= null and USERNAME != ''">
            and bu.USERNAME  = #{USERNAME}
        </if>
        <if test="TELPHONE!= null and TELPHONE != ''">
            and bu.TELPHONE  = #{TELPHONE}
        </if>
        <if test="STATUS!= null and STATUS != ''">
            and bu.STATUS  = #{STATUS}
        </if>
        order by bu.MODIFIER desc limit #{start} , #{limit}
    </select>

    <select id="pagerCount" parameterType="map" resultType="long">
        select count(*) from base_user bu
        where bu.PROJECT_CODE = #{PROJECT_CODE}
        <if test="USERNAME!= null and USERNAME != ''">
            and bu.USERNAME  = #{USERNAME}
        </if>
        <if test="TELPHONE!= null and TELPHONE != ''">
            and bu.TELPHONE  = #{TELPHONE}
        </if>
        <if test="STATUS!= null and STATUS != ''">
            and bu.STATUS  = #{STATUS}
        </if>
    </select>

    <select id="load" parameterType="map" resultType="map">
        select * from base_user where ID = #{ID}
    </select>

    <select id="findByUserName" parameterType="map" resultType="map">
        select * from base_user where PROJECT_CODE = #{projectCode}
        <if test="TELPHONE_LOGIN == 1">
            and (USERNAME = #{username} or TELPHONE = #{username})
        </if>
        <if test="TELPHONE_LOGIN == 0">
           and USERNAME = #{username}
        </if>
    </select>

    <update id="resetPwd" parameterType="map">
        UPDATE base_user
        set PASSWORD = #{PASSWORD}
        where ID = #{ID}
    </update>

    <select id="countByRoleId" parameterType="string" resultType="long">
        select count(*) from base_user where BASE_ROLE_ID = #{_parameter}
    </select>

    <select id="countByRoleIds" parameterType="list" resultType="long">
        select count(*) from base_user where BASE_ROLE_ID IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="countByDepartId" parameterType="string" resultType="long">
        select count(*) from base_user where BASE_DEPART_ID = #{_parameter}
    </select>

    <select id="countByDepartIds" parameterType="list" resultType="long">
        select count(*) from base_user where BASE_DEPART_ID IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <insert id="save" parameterType="map">
        insert into base_user (ID, USERNAME, TELPHONE, PASSWORD, BASE_ROLE_ID,BASE_DEPART_ID STATUS, PROJECT_CODE, CREATEOR,
                                CREATE_DATE, MODIFIER, MODIFY_DATE)
        values (uuid(), #{USERNAME}, #{TELPHONE}, #{PASSWORD}, #{BASE_ROLE_ID},#{BASE_DEPART_ID}, #{STATUS}, #{PROJECT_CODE}, #{CREATEOR},
                now(), #{MODIFIER}, now())
    </insert>

    <update id="update" parameterType="map">
        update base_user
        set TELPHONE     = #{TELPHONE},
            PASSWORD     = #{PASSWORD},
            BASE_ROLE_ID = #{BASE_ROLE_ID},
            STATUS       = #{STATUS},
            MODIFIER     = #{MODIFIER},
            BASE_DEPART_ID = #{BASE_DEPART_ID},
            MODIFY_DATE  = now()
        where ID = #{ID}
    </update>

    <delete id="deleteById" parameterType="map">
        DELETE
        FROM base_user
        WHERE ID = #{ID}
    </delete>

    <delete id="delete" parameterType="map">
        DELETE
        FROM base_user
        WHERE ID in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <update id="start" parameterType="map">
        UPDATE base_user
        SET STATUS      = 0,
            MODIFY_DATE=now()
        WHERE ID = #{ID}
    </update>

    <update id="stop" parameterType="map">
        UPDATE base_user
        SET STATUS      = 1,
            MODIFY_DATE=now()
        WHERE ID = #{ID}
    </update>

    <select id="usernameIsExit" parameterType="map" resultType="long">
        select count(*) from base_user where PROJECT_CODE = #{PROJECT_CODE} and USERNAME = #{USERNAME}
    </select>

    <delete id="deleteByProjectId" parameterType="string">
        delete from base_user where PROJECT_CODE in (select PROJECT_CODE from base_project where id = #{_parameter})
    </delete>

    <delete id="deleteByProjectIds" parameterType="list">
        delete from base_user where PROJECT_CODE in (select PROJECT_CODE from base_project where id in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>)
    </delete>
</mapper>
